---
- hosts: managers, workers
  tasks:
    - name: register swarm status
      shell: docker info --format '{{'{{'}}json .Swarm.LocalNodeState{{'}}'}}' | sed -e 's/^"//' -e 's/"$//'
      register: swarm_status



- hosts: managers
  tasks:
    - name: show managers initial status
      debug:
        msg: "swarm status for {{ inventory_hostname }} is {{ swarm_status.stdout }}"
    - name: build ready_managers group
      add_host:
        hostname: "{{ item }}"
        groups: ready_managers
      with_items: "{{ play_hosts }}"
      when: "swarm_status.stdout == 'active'"
    - name: build to_be_initialized_managers
      add_host:
        hostname: "{{ item }}"
        groups: to_be_initialized_managers
      with_items: "{{ play_hosts }}"
      when: "swarm_status.stdout == 'inactive'"

- hosts: workers
  tasks:
    - name: build ready_workers group
      add_host: 
        hostname: "{{ item }}"
        groups: ready_workers
      with_items: "{{ play_hosts }}"
      when: "swarm_status.stdout == 'active'"
    - name: build to_be_initialized_workers
      add_host:
        hostname: "{{ item }}"
        groups: to_be_initialized_workers
      with_items: "{{ play_hosts }}"
      when: "swarm_status.stdout == 'inactive'"
        

- hosts: to_be_initialized_managers[0]
  tasks:
    - name: build bootstrap group
      add_host:
        hostname: "{{ inventory_hostname }}"
        groups: bootstrap
      when: "'ready_managers' not in groups"



- hosts: bootstrap
  tasks:
    - name: show bootstrap node
      debug:
        msg: "swarm needs to be bootstrapped on host {{ inventory_hostname }}"

- hosts: to_be_initialized_managers
  tasks:
    - name: show to be initialized managers
      debug:
        msg: "{{ inventory_hostname }} manager needs to be initialized"

- hosts: to_be_initialized_workers
  tasks:
    - name: show to be initialized workers
      debug:
        msg: "{{ inventory_hostname }} worker needs to be initialized"


- hosts: ready_managers
  tasks:
    - name: show ready managers
      debug: 
        msg: "{{ inventory_hostname }} is a running manager"

- hosts: ready_workers
  tasks:
    - name: show ready workers
      debug:
        msg: "{{ inventory_hostname }} is a running worker"

